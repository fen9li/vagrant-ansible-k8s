---
- hosts: all
  become: true
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1

  tasks:
  - name: upgrade all packages
    yum: 
      name: '*' 
      state: latest

  - name: Disable SELinux
    selinux: 
      policy: targeted
      state: permissive

  - name: Set SELinux in permissive mode until next reboot
    command: setenforce 0

  - name: Disable firewalld service
    systemd:
      name: firewalld
      state: stopped
      enabled: no

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Bridging container traffices
    sysctl:
      name: '{{ item.key }}' 
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
    with_dict: '{{ sysctl_config }}'

  - name: Create k8s repo
    yum_repository: 
      name: Kubernetes
      description: Kubernetes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      gpgcheck: yes
      enabled: yes
      repo_gpgcheck: yes
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Install kubeadm & docker packages
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
        - docker
        - kubeadm
  
  - name: Enable and start docker service
    systemd:
      name: docker
      state: started
      enabled: yes

  - name: Enable and restart kubelet service
    systemd:
      name: kubelet
      state: restarted
      enabled: yes

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: dockerroot 

  - name: Wait until master-playbook generate `./join-command` before continuing
    wait_for:
      timeout: 600

  - name: Copy join_command from shared local file
    copy: 
      src: join-command 
      dest: /tmp/join-command.sh  
      owner: vagrant
      group: vagrant
      mode: '0644'
  
  - name: Join the node to cluster
    become: yes
    become_user: root
    command: sh /tmp/join-command.sh

  handlers:
    - name: docker status
      service: 
        name: docker 
        state: started
